kind: pipeline
name: default

steps:
- name: Bootstrap DB2
  group: bootstrap
  image: majkl578/db2-test
  commands:
    - su - db2inst1 -c "db2 catalog tcpip node remote1 remote `getent hosts db2 | cut -d' ' -f1` server 50000"
    - su - db2inst1 -c 'db2 catalog database TEST AS TESTDB at node remote1'
    - |
      retries=90
      until su - db2inst1 -c 'db2 CONNECT TO TESTDB USER db2inst1 USING OpenSource123' &> /dev/null
      do
        if [[ "$retries" -eq 0 ]]; then
          echo DB2 instance failed to start.
          exit 1
        fi

        retries=$((retries - 1))

        echo Waiting for DB2 instance...
        sleep 1
      done

      echo DB2 instance ready.
- name: Bootstrap PostgreSQL
  group: bootstrap
  image: postgres:10
  commands:
    - |
      for db in postgres-9.2 postgres-9.3 postgres-9.4 postgres-9.5 postgres-9.6 postgres-10 postgres-11; do
        retries=15
        until pg_isready -d "postgresql://test:test@$db/test" > /dev/null
        do
          if [[ "$retries" -eq 0 ]]; then
            echo PostgreSQL instance $db failed to start.
            exit 1
          fi

          retries=$((retries - 1))

          echo Waiting for PostgreSQL instance $db...
          sleep 1
        done
        
        echo PostgreSQL instance $db ready.
      done
- name: Bootstrap MySQL
  group: bootstrap
  image: mysql:5.7
  commands:
    - |
      for db in mysql-5.5 mysql-5.7 mysql-8.0; do
        retries=15
        until mysql -h $db -u test -ptest -e "SHOW DATABASES;" > /dev/null
        do
          if [[ "$retries" -eq 0 ]]; then
            echo MySQL instance $db failed to start.
            exit 1
          fi

          retries=$((retries - 1))

          echo Waiting for MySQL instance $db...
          sleep 1
        done
        
        echo MySQL instance $db ready.
      done
- name: Bootstrap MariaDB
  group: bootstrap
  image: mariadb:10.3
  commands:
    - |
      for db in mariadb-5.5 mariadb-10.1 mariadb-10.2 mariadb-10.3; do
        retries=15
        until mysql -h $db -u test -ptest -e "SHOW DATABASES;" > /dev/null
        do
          if [[ "$retries" -eq 0 ]]; then
            echo MariaDB instance $db failed to start.
            exit 1
          fi

          retries=$((retries - 1))

          echo Waiting for MariaDB instance $db...
          sleep 1
        done
        
        echo MariaDB instance $db ready.
      done
- name: Bootstrap MSSQL
  group: bootstrap
  image: microsoft/mssql-server-linux:2017-latest
  commands:
    - |
      for db in mssql-2017; do
        retries=15
        until (echo quit | /opt/mssql-tools/bin/sqlcmd -S mssql-2017 -l 1 -U sa -P Doctrine2018 &> /dev/null)
        do
          if [[ "$retries" -eq 0 ]]; then
            echo SQL Server instance $db failed to start.
            exit 1
          fi

          retries=$((retries - 1))

          echo Waiting for SQL Server instance $db...
          sleep 1
        done
        
        echo SQL Server instance $db started.
      done

- name: Lint (Coding Standards, PHP 7.2)
  group: test
  image: php:7.2-cli-stretch
  commands:
    - apt-get update && apt-get install unzip
    - curl -sSL https://getcomposer.org/composer.phar > /usr/local/bin/composer
    - chmod +x /usr/local/bin/composer
    - composer install --prefer-dist
    - vendor/bin/phpcs
- name: Lint (PHPStan, PHP 7.2)
  group: test
  image: php:7.3-rc-cli-stretch
  commands:
    - apt-get update && apt-get install unzip
    - curl -sSL https://getcomposer.org/composer.phar > /usr/local/bin/composer
    - chmod +x /usr/local/bin/composer
    - composer install --prefer-dist
    - vendor/bin/phpstan analyse
- name: Test SQLite (PHP 7.1, no coverage)
  group: test
  image: php:7.2-cli-stretch
  commands:
    - apt-get update && apt-get install unzip
    - curl -sSL https://getcomposer.org/composer.phar > /usr/local/bin/composer
    - chmod +x /usr/local/bin/composer
    - composer install --prefer-dist
    - vendor/bin/phpunit -c tests/travis/sqlite.travis.xml
- name: Test SQLite (PHP 7.3, no coverage)
  group: test
  image: php:7.3-rc-cli-stretch
  commands:
    - apt-get update && apt-get install unzip
    - curl -sSL https://getcomposer.org/composer.phar > /usr/local/bin/composer
    - chmod +x /usr/local/bin/composer
    - composer install --prefer-dist
    - vendor/bin/phpunit -c tests/travis/sqlite.travis.xml

services:
- name: mysql-5.5
  image: mysql:5.5
  environment:
    MYSQL_USER: test
    MYSQL_PASSWORD: test
    MYSQL_RANDOM_ROOT_PASSWORD: yes
- name: mysql-5.7
  image: mysql:5.7
  environment:
    MYSQL_USER: test
    MYSQL_PASSWORD: test
    MYSQL_RANDOM_ROOT_PASSWORD: yes
- name: mysql-8.0
  image: mysql:8.0
  environment:
    MYSQL_USER: test
    MYSQL_PASSWORD: test
    MYSQL_RANDOM_ROOT_PASSWORD: yes
- name: mariadb-5.5
  image: mariadb:5.5
  environment:
    MYSQL_USER: test
    MYSQL_PASSWORD: test
    MYSQL_RANDOM_ROOT_PASSWORD: yes
- name: mariadb-10.1
  image: mariadb:10.1
  environment:
    MYSQL_USER: test
    MYSQL_PASSWORD: test
    MYSQL_RANDOM_ROOT_PASSWORD: yes
- name: mariadb-10.2
  image: mariadb:10.2
  environment:
    MYSQL_USER: test
    MYSQL_PASSWORD: test
    MYSQL_RANDOM_ROOT_PASSWORD: yes
- name: mariadb-10.3
  image: mariadb:10.3
  environment:
    MYSQL_USER: test
    MYSQL_PASSWORD: test
    MYSQL_RANDOM_ROOT_PASSWORD: yes
- name: postgres-9.2
  image: postgres:9.2
  pull: always
  environment:
    POSTGRES_USER: test
    POSTGRES_PASSWORD: test
- name: postgres-9.3
  image: postgres:9.3
  pull: always
  environment:
    POSTGRES_USER: test
    POSTGRES_PASSWORD: test
- name: postgres-9.4
  image: postgres:9.4
  pull: always
  environment:
    POSTGRES_USER: test
    POSTGRES_PASSWORD: test
- name: postgres-9.5
  image: postgres:9.5
  pull: always
  environment:
    POSTGRES_USER: test
    POSTGRES_PASSWORD: test
- name: postgres-9.6
  image: postgres:9.6
  pull: always
  environment:
    POSTGRES_USER: test
    POSTGRES_PASSWORD: test
- name: postgres-10
  image: postgres:10
  pull: always
  environment:
    POSTGRES_USER: test
    POSTGRES_PASSWORD: test
- name: postgres-11
  image: postgres:11
  pull: always
  environment:
    POSTGRES_USER: test
    POSTGRES_PASSWORD: test
- name: db2
  image: majkl578/db2-test
- name: mssql-2017
  image: microsoft/mssql-server-linux:2017-latest
  environment:
    ACCEPT_EULA: y
    SA_PASSWORD: Doctrine2018
